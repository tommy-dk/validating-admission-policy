apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  name: prod-ready
spec:
  failurePolicy: Fail
  paramKind:
    apiVersion: example.com/v1
    kind: parameters
  matchConstraints:
    resourceRules:
    - apiGroups:   ["apps"]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["deployments", "statefulsets"]
  validations:
    - expression: "object.spec.replicas >= params.parameters.maxReplicas"
      messageExpression: "'spec.replicas must be at least ' + string(params.parameters.maxReplicas) + ' or more replicas for running in production'"

    - expression: |
        params.parameters.bannedRegistries.all(
          registry, object.spec.template.spec.containers.exists_one(
            container, !(container.image.startsWith(registry))
          )
        )
      ## This works, but its obviously not accurate
      messageExpression: "'Image is coming from an untrusted registry: ' + string(params.parameters.bannedRegistries[0])"

    - expression: |
        params.parameters.bannedTags.all(
          tag, object.spec.template.spec.containers.all(
            container, !(container.image.endsWith(':' + tag))
          )
        )
      messageExpression: "Cannot use this tag for container images"

    - expression: |
        object.spec.template.spec.containers.all(
          container, has(container.resources) && has(container.resources.limits) && has(container.resources.limits.cpu)
        )
      message: "A container in the pod does not have a cpu limit set"

    - expression: "has(object.metadata.labels.app)"
      message: "Deployment needs `app` label"

    - expression: "has(object.metadata.labels.env) && object.metadata.labels.env in params.parameters.allowedEnvLabels"
      message: "Deployment should have an environment label called `env` and set to the allowed naming standards"